<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
 Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="1.1.3" use-changelog="false" max-obj-count="4"
	 last-position="0,0" last-zoom="1.75"
	 default-schema="public" default-owner="postgres"
	 layers="Default layer"
	 active-layers="0"
	 layer-name-colors="#000000"
	 layer-rect-colors="#b4b4b4"
	 show-layer-names="false" show-layer-rects="false">
<database name="new_database" is-template="false" allow-conns="true">
</database>

<schema name="public" layers="0" fill-color="#e1e1e1" name-color="#000000" sql-disabled="true">
</schema>

<table name="Articles" layers="0" collapse-mode="2" max-obj-count="4" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="40"/>
	<column name="Id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="bigint" length="0"/>
	</column>
	<column name="Title" not-null="true">
		<type name="varchar" length="60"/>
	</column>
	<column name="PublishedDate" default-value="NOW() AT TIME ZONE 'utc'" generated="true">
		<type name="date" length="0"/>
	</column>
	<column name="AuthorId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_Article" type="pk-constr" table="public.&quot;Articles&quot;">
		<columns names="Id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ArticleLikes" layers="0" collapse-mode="2" max-obj-count="2" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="100" y="340"/>
	<column name="ArticleId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="UserId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_ArticleLikes" type="pk-constr" table="public.&quot;ArticleLikes&quot;">
		<columns names="UserId,ArticleId" ref-type="src-columns"/>
	</constraint>
</table>

<table name="Authors" layers="0" collapse-mode="2" max-obj-count="1" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="500" y="80"/>
	<column name="UserId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_UserId" type="pk-constr" table="public.&quot;Authors&quot;">
		<columns names="UserId" ref-type="src-columns"/>
	</constraint>
</table>

<constraint name="FK_Articles_Authors" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;Authors&quot;" table="public.&quot;Articles&quot;">
	<columns names="AuthorId" ref-type="src-columns"/>
	<columns names="UserId" ref-type="dst-columns"/>
</constraint>

<constraint name="FK_ArticleLikes_Articles" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.&quot;Articles&quot;" table="public.&quot;ArticleLikes&quot;">
	<columns names="ArticleId" ref-type="src-columns"/>
	<columns names="Id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_Articles_Authors" type="relfk" layers="0"
	 src-table="public.&quot;Articles&quot;"
	 dst-table="public.&quot;Authors&quot;" reference-fk="FK_Articles_Authors"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<relationship name="rel_ArticleLikes_Articles" type="relfk" layers="0"
	 src-table="public.&quot;ArticleLikes&quot;"
	 dst-table="public.&quot;Articles&quot;" reference-fk="FK_ArticleLikes_Articles"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

</dbmodel>
