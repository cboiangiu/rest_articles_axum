<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
 Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="1.1.3" use-changelog="false" max-obj-count="6"
	 last-position="0,0" last-zoom="1.5"
	 default-schema="public" default-owner="postgres"
	 layers="Default layer"
	 active-layers="0"
	 layer-name-colors="#000000"
	 layer-rect-colors="#b4b4b4"
	 show-layer-names="false" show-layer-rects="false">
<database name="RestArticlesAxum" is-template="false" allow-conns="true">
</database>

<schema name="public" layers="0" fill-color="#e1e1e1" name-color="#000000" sql-disabled="true">
</schema>

<schema name="identity" layers="0" rect-visible="true" fill-color="#e1e1e1" name-color="#31363b">
	<role name="postgres"/>
</schema>

<table name="Articles" layers="0" collapse-mode="2" max-obj-count="4" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="80"/>
	<column name="Id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="bigint" length="0"/>
	</column>
	<column name="Title" not-null="true">
		<type name="varchar" length="60"/>
	</column>
	<column name="PublishedDate" not-null="true" default-value="NOW() AT TIME ZONE 'utc'">
		<type name="date" length="0"/>
	</column>
	<column name="UserId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_Article" type="pk-constr" table="public.&quot;Articles&quot;">
		<columns names="Id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ArticleLikes" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="400"/>
	<column name="ArticleId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="UserId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_ArticleLikes" type="pk-constr" table="public.&quot;ArticleLikes&quot;">
		<columns names="UserId,ArticleId" ref-type="src-columns"/>
	</constraint>
</table>

<table name="Profiles" layers="0" collapse-mode="2" max-obj-count="1" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="480" y="420"/>
	<column name="UserId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_UserId" type="pk-constr" table="public.&quot;Profiles&quot;">
		<columns names="UserId" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ArticleViews" layers="0" collapse-mode="2" max-obj-count="4" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="580" y="60"/>
	<column name="ArticleId" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="IpAddressHash" not-null="true">
		<type name="character varying" length="0"/>
	</column>
	<column name="ViewDate" not-null="true" default-value="DATE_TRUNC('day', NOW() AT TIME ZONE 'utc')::date">
		<type name="date" length="0"/>
	</column>
	<column name="UserId">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="PK_ArticleViews" type="pk-constr" table="public.&quot;ArticleViews&quot;">
		<columns names="ArticleId,IpAddressHash,ViewDate" ref-type="src-columns"/>
	</constraint>
	<constraint name="UQ_ViewDate_UserId" type="uq-constr" table="public.&quot;ArticleViews&quot;">
		<columns names="ViewDate,UserId" ref-type="src-columns"/>
	</constraint>
</table>

<index name="IX_PublishedDate" table="public.&quot;Articles&quot;"
	 concurrent="false" unique="false" fast-update="false" buffering="false" nulls-not-distinct="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="PublishedDate"/>
		</idxelement>
	<columns names="&quot;PublishedDate&quot;"/>
</index>

<table name="Users" layers="0" collapse-mode="2" pagination="true" attribs-page="0" ext-attribs-page="0" max-obj-count="2" z-value="0">
	<schema name="identity"/>
	<role name="postgres"/>
	<position x="720" y="420"/>
	<column name="Id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="bigint" length="0"/>
	</column>
	<column name="UserName" not-null="true">
		<type name="varchar" length="16"/>
	</column>
	<constraint name="PK_Id" type="pk-constr" table="identity.&quot;Users&quot;">
		<columns names="Id" ref-type="src-columns"/>
	</constraint>
</table>

<constraint name="FK_Articles_Profiles" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;Profiles&quot;" table="public.&quot;Articles&quot;">
	<columns names="UserId" ref-type="src-columns"/>
	<columns names="UserId" ref-type="dst-columns"/>
</constraint>

<constraint name="FK_ArticleLikes_Articles" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.&quot;Articles&quot;" table="public.&quot;ArticleLikes&quot;">
	<columns names="ArticleId" ref-type="src-columns"/>
	<columns names="Id" ref-type="dst-columns"/>
</constraint>

<constraint name="FK_ArticleLikes_Profiles" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;Profiles&quot;" table="public.&quot;ArticleLikes&quot;">
	<columns names="UserId" ref-type="src-columns"/>
	<columns names="UserId" ref-type="dst-columns"/>
</constraint>

<constraint name="FK_ArticleViews_Articles" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.&quot;Articles&quot;" table="public.&quot;ArticleViews&quot;">
	<columns names="ArticleId" ref-type="src-columns"/>
	<columns names="Id" ref-type="dst-columns"/>
</constraint>

<constraint name="FK_ArticleViews_Profiles" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;Profiles&quot;" table="public.&quot;ArticleViews&quot;">
	<columns names="UserId" ref-type="src-columns"/>
	<columns names="UserId" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_Articles_Profiles" type="relfk" layers="0"
	 src-table="public.&quot;Articles&quot;"
	 dst-table="public.&quot;Profiles&quot;" reference-fk="FK_Articles_Profiles"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<relationship name="rel_ArticleLikes_Articles" type="relfk" layers="0"
	 src-table="public.&quot;ArticleLikes&quot;"
	 dst-table="public.&quot;Articles&quot;" reference-fk="FK_ArticleLikes_Articles"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<relationship name="rel_ArticleLikes_Profiles" type="relfk" layers="0"
	 src-table="public.&quot;ArticleLikes&quot;"
	 dst-table="public.&quot;Profiles&quot;" reference-fk="FK_ArticleLikes_Profiles"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<relationship name="&quot;rel_ArticleViews_Articles&quot;" type="relfk" layers="0"
	 src-table="public.&quot;ArticleViews&quot;"
	 dst-table="public.&quot;Articles&quot;" reference-fk="FK_ArticleViews_Articles"
	 src-required="false" dst-required="true"/>

<relationship name="&quot;rel_ArticleViews_Profiles&quot;" type="relfk" layers="0"
	 src-table="public.&quot;ArticleViews&quot;"
	 dst-table="public.&quot;Profiles&quot;" reference-fk="FK_ArticleViews_Profiles"
	 src-required="false" dst-required="false"/>

</dbmodel>
